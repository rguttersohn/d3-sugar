let d3=require("d3");class Core{constructor(t){this.selector=t,this.data="",this.indicator="",this.stat="",this.parts={},this.legend=[],this.domain=[],this.transitionAttr=[],this.height=0,this.width=0,this.margin=50,this.padding="",this.wrapperWidth=0}get root(){return d3.select(this.selector)}get commaFormatter(){return d3.format(",")}get percentFormatter(){return d3.format(",.1%")}get localMin(){return d3.min(this.data,(t=>t[`${this.stat}`]))}get localMax(){return d3.max(this.data,(t=>t[`${this.stat}`]))}get hideLineY(){return d3.selectAll(`${this.selector} svg .y-axis .domain`).style("visibility","hidden")}get hideLineX(){return d3.select(`${this.selector} svg .x-axis .domain`).style("visibility","hidden")}get flatten(){return this.data.forEach((t=>{Object.values(t).map((t=>{"string"!=typeof t&&this.domain.push(t)}))}))}get max(){return Math.max(...this.domain)}get min(){return Math.min(...this.domain)}get lineFunc(){return d3.line().x((t=>this.scaleBandHorizontal(t[`${this.indicator}`])+this.scaleBandHorizontal.bandwidth()/2)).y((t=>this.scaleLinearVertical(t[this.stat]))).curve(d3.curveLinear)}get scaleBandHorizontal(){return d3.scaleBand().range([0,this.width]).domain(this.data.map((t=>t[`${this.indicator}`]))).padding(this.padding)}get scaleBandVertical(){return d3.scaleBand().range([0,this.height]).domain(this.data.map((t=>t[`${this.indicator}`]))).padding(this.padding)}get scaleLinearHorizontal(){return d3.scaleLinear().range([0,this.width]).domain(this.min>=0?[0,this.max+5]:[this.min-5,this.max+5])}get scaleLinearVertical(){return d3.scaleLinear().range([this.height,0]).domain(this.min>=0?[0,this.max+5]:[this.min-5,this.max+5])}addHeader(t){return this.root.insert("h3","svg"),d3.select(`${this.selector} h3`).style("text-align","center").style("width","100%").text((()=>{if(t)return t})),this}addLegend({legendLabel:t}={}){return this.root.append("div").attr("class","legend").style("margin","auto").style("display","flex").style("width","100%").style("justify-content","space-evenly").style("align-items","flex-start").selectAll("div").data(this.legend).enter().append("div").style("display","flex").style("align-items","baseline").html("<i></i><span></span>"),d3.selectAll(`${this.selector} .legend i`).attr("class","legend-icon").style("display","inline-block").style("margin-right","5px").style("width","15px").style("height","15px").data(this.data).style("background-color",((t,i)=>this.legend[i].color)),d3.selectAll(`${this.selector} .legend span`).attr("class","legend-label").data(this.data).text(((i,s)=>t?Array.isArray(t)?t[s]:i[t]:this.legend[s].indicator)),this}addTransition({duration:t=300,ease:i=d3.easeCubic,delay:s=0}={}){return this.parts[`${this.transitionAttr[0].part}`].attr(this.transitionAttr[0].attr_1,((t,i)=>void 0!==this.transitionAttr[i].startAttr_1?this.transitionAttr[i].startAttr_1:null)).attr(this.transitionAttr[0].attr_2,((t,i)=>void 0!==this.transitionAttr[i].startAttr_2?this.transitionAttr[i].startAttr_2:null)).transition().delay(s).duration(t).ease(i).attr(this.transitionAttr[0].attr_1,((t,i)=>void 0!==this.transitionAttr[i].endAttr_1?this.transitionAttr[i].endAttr_1:null)).attr(this.transitionAttr[0].attr_2,((t,i)=>void 0!==this.transitionAttr[i].endAttr_2?this.transitionAttr[i].endAttr_2:null)),this}}class VerticalBarChart extends Core{constructor(t){super(t)}createChart({width:t=300,height:i=400,data:s,indicator:a,stat:r}={}){s?this.data=s:s=this.data,a?this.indicator=a:a=this.indicator,r?this.stat=r:r=this.stat;for(let t=0;t<this.data.length;t++)this.legend.push({}),this.legend[t].indicator=this.data[t][`${this.indicator}`];if(this.width=t,this.wrapperWidth=t,this.height=i,t&&i)return this.flatten,this.parts.svg=this.root.append("svg"),this.parts.svg.attr("viewBox",`0 0 ${this.width+2*this.margin} ${this.height+this.margin}`),this}addBars({padding:t=.2,opacity:i=1,color:s=["black"]}={}){this.padding=t,this.parts.bars=this.parts.svg.append("g").attr("class","bars").selectAll("rect").data(this.data).enter().append("rect").attr("x",(t=>this.scaleBandHorizontal(t[`${this.indicator}`]))).attr("width",this.scaleBandHorizontal.bandwidth()).attr("transform",`translate(${this.margin},${this.margin/2})`).style("opacity",i).attr("y",(t=>this.min>=0?this.scaleLinearVertical(t[`${this.stat}`]):t[`${this.stat}`]<0?this.scaleLinearVertical(0):this.scaleLinearVertical(t[`${this.stat}`]))).attr("height",(t=>this.min>=0?this.height-this.scaleLinearVertical(t[`${this.stat}`]):this.scaleLinearVertical(0)-this.scaleLinearVertical(Math.abs(t[`${this.stat}`])))).attr("fill",((t,i)=>{if(Array.isArray(s))return 1===s.length?s[0]:s[i]})),this.min<0&&d3.select(`${this.selector} svg`).append("g").attr("class","dividing-line").append("line").attr("x1",this.margin).attr("x2",this.margin+this.width).attr("y1",this.scaleLinearVertical(0)+this.margin/2).attr("y2",this.scaleLinearVertical(0)+this.margin/2).style("stroke","lightgray").style("stroke-width","1px");for(let t=0;t<this.legend.length;t++)s.length>1?this.legend[t].color=s[t]:1===s.length&&(this.legend[t].color=s[0]);this.transitionAttr=[];for(let t=0;t<this.parts.bars._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part="bars",this.transitionAttr[t].attr_1="height",this.transitionAttr[t].startAttr_1=0,this.transitionAttr[t].endAttr_1=parseFloat(this.parts.bars._groups[0][t].getAttribute("height")),this.transitionAttr[t].attr_2="y",this.transitionAttr[t].startAttr_2=this.scaleLinearVertical(0),this.transitionAttr[t].endAttr_2=parseFloat(this.parts.bars._groups[0][t].getAttribute("y"))}return this}addXAxis({tickSizeOuter:t=0,tickSizeInner:i=null,tickPadding:s=3,hideLine:a=!1,axisLabels:r}={}){if(0!==this.width||0!==this.height)return this.parts.xAxis=d3.select(this.selector+"  svg").append("g").attr("class","x-axis").attr("transform",`translate(${this.margin},${this.height+this.margin/2})`).call(d3.axisBottom(this.scaleBandHorizontal).tickSizeOuter(t).tickSizeInner(i).tickPadding(s)),a&&this.hideLineX,Array.isArray(r)&&d3.selectAll(`${this.selector} svg .x-axis .tick text`).html(((t,i)=>r[i])),this}addYAxis({formatPunctuation:t="commaSeparate",ticks:i=10,tickSizeOuter:s=0,tickSizeInner:a=null,tickValues:r=null,tickPadding:e=3,hideLine:n=!1,axisLabel:h}={}){if(0!==this.width||0!==this.height)return this.parts.yAxis=d3.select(this.selector+" svg").append("g").attr("class","y-axis").attr("transform",`translate(${this.margin},${this.margin/2})`).call(d3.axisLeft(this.scaleLinearVertical).tickFormat((i=>"addPercent"===t?i+"%":"commaSeparate"===t||!1===t?this.commaFormatter(i):void 0)).ticks(i).tickSizeOuter(s).tickSizeInner(a).tickValues(r).tickPadding(e)),d3.selectAll(`${this.selector} svg .y-axis .tick line`).style("stroke","gainsboro"),n&&this.hideLineY,Array.isArray(h)&&d3.selectAll(`${this.selector} svg .y-axis .tick text`).html(((t,i)=>h[i])),this}addLabels({formatPunctuation:t="commaSeparate",dx:i=0,dy:s=0,color:a="black",fontWeight:r="normal",fontSize:e=null,show:n=!1}={}){if(0!==this.width||0!==this.height){if(this.parts.labels=d3.select(this.selector+" svg").append("g").attr("class","labels").selectAll("text").data(this.data).enter().append("text").text((t=>{if(Array.isArray(n)){let i=Array.from(this.data.map((t=>t[`${this.stat}`])));if(n.includes("first")&&t[`${this.stat}`]===i[0])return t[`${this.stat}`];if(n.includes("last")&&t[`${this.stat}`]===i[i.length-1])return t[`${this.stat}`];if(n.includes("max")&&t[`${this.stat}`]===this.localMax)return t[`${this.stat}`];if(n.includes("min")&&t[`${this.stat}`]===this.localMin)return t[`${this.stat}`]}else if(!n)return t[`${this.stat}`]})).attr("y",(t=>this.scaleLinearVertical(t[`${this.stat}`])+20)).attr("dy",s).attr("x",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])+this.scaleBandHorizontal.bandwidth()/2)).attr("dx",i).attr("text-anchor","middle").attr("transform",`translate(${this.margin},0)`).attr("fill",a).style("font-family","sans-serif").style("font-weight",r).style("font-size",e),t){let i=document.querySelectorAll(`${this.selector} svg .labels text`);for(let s of i)s.textContent&&("addPercent"===t?s.textContent=s.textContent+"%":"commaSeparate"!==t&&!1!==t||(s.textContent=this.commaFormatter(s.textContent)))}return this}}}class HorizontalBarChart extends Core{constructor(t){super(t)}createChart({width:t=400,height:i=300,data:s,indicator:a,stat:r}={}){s?this.data=s:s=this.indicator,a?this.indicator=a:a=this.indicator,r?this.stat=r:r=this.stat;for(let t=0;t<this.data.length;t++)this.legend.push({}),this.legend[t].indicator=this.data[t][`${this.indicator}`];if(this.width=t,this.wrapperWidth=t,this.height=i,t&&i)return this.flatten,this.parts.svg=this.root.append("svg").attr("viewBox",`0 0 ${this.width+2*this.margin} ${this.height+this.margin}`).append("g").attr("class","bars"),this}addBars({padding:t=.2,opacity:i=1,color:s=["black"]}={}){this.padding=t,this.parts.bars=d3.select(`${this.selector} svg`).append("g").attr("class","bars").append("g").selectAll("rect").data(this.data).enter().append("rect").attr("y",(t=>this.scaleBandVertical(t[`${this.indicator}`]))).attr("transform",`translate(0,${this.margin/2})`).style("opacity",i).attr("height",(t=>this.scaleBandVertical.bandwidth())).attr("x",(t=>this.min>=0?this.margin:t[`${this.stat}`]>=0?this.scaleLinearHorizontal(0)+this.margin:this.margin+this.scaleLinearHorizontal(t[`${this.stat}`]))).attr("width",(t=>this.min>=0?this.scaleLinearHorizontal(t[`${this.stat}`]):Math.abs(this.scaleLinearHorizontal(t[`${this.stat}`])-this.scaleLinearHorizontal(0)))).attr("fill",((t,i)=>{if(Array.isArray(s))return 1===s.length?s[0]:s[i]})),this.min<0&&d3.select(`${this.selector} svg`).append("g").attr("class","dividing-line").append("line").attr("y1",0).attr("y2",this.height+this.margin/2).attr("x1",this.scaleLinearHorizontal(0)+this.margin).attr("x2",this.scaleLinearHorizontal(0)+this.margin).style("stroke","lightgray").style("stroke-width","1px");for(let t=0;t<this.legend.length;t++)s.length>1?this.legend[t].color=s[t]:1===s.length&&(this.legend[t].color=s[0]);this.transtionAttr=[];for(let t=0;t<this.parts.bars._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part="bars",this.transitionAttr[t].attr_1="width",this.transitionAttr[t].startAttr_1=0,this.transitionAttr[t].endAttr_1=parseFloat(this.parts.bars._groups[0][t].getAttribute("width")),this.transitionAttr[t].attr_2="x",this.transitionAttr[t].startAttr_2=this.scaleLinearHorizontal(0)+this.margin,this.transitionAttr[t].endAttr_2=parseFloat(this.parts.bars._groups[0][t].getAttribute("x"))}return this}addYAxis({tickSizeOuter:t=0,tickSizeInner:i=3,tickPadding:s=3,hideLine:a=!1,axisLabels:r}={}){if(0!==this.width||0!==this.height)return this.parts.yAxis=d3.select(this.selector+" svg").append("g").attr("class","y-axis").attr("transform",`translate(${this.margin},${this.margin/2})`).call(d3.axisLeft(this.scaleBandVertical).tickSizeOuter(t).tickSizeInner(i).tickPadding(s)),a&&this.hideLineY,Array.isArray(r)&&d3.selectAll(`${this.selector} svg .y-axis .tick text`).html(((t,i)=>r[i])),this}addXAxis({formatPunctuation:t="commaSeparate",ticks:i=10,tickSizeOuter:s=0,tickSizeInner:a=3,tickValues:r=null,tickPadding:e=10,hideLine:n=!1,axisLabels:h}={}){if(0!==this.width||0!==this.height)return this.parts.xAxis=d3.select(this.selector+"  svg").append("g").attr("class","x-axis").attr("transform",`translate(${this.margin},${this.height+this.margin/2})`).call(d3.axisBottom(this.scaleLinearHorizontal).tickFormat((i=>"addPercent"===t?i+"%":"commaSeparate"===t||!1===t?this.commaFormatter(i):void 0)).ticks(i).tickSizeOuter(s).tickSizeInner(a).tickValues(r).tickPadding(e)),d3.selectAll(`${this.selector} svg .x-axis .tick line`).style("stroke","gainsboro"),n&&this.hideLineX,Array.isArray(h)&&d3.selectAll(`${this.selector} svg .x-axis .tick text`).html(((t,i)=>h[i])),this}addLabels({formatPunctuation:t="commaSeparate",dx:i=0,dy:s=0,color:a="black",fontWeight:r="normal",fontSize:e=null,show:n=!1}={}){if(0!==this.width||0!==this.height){if(this.parts.labels=d3.select(this.selector+" svg").append("g").attr("class","labels").selectAll("text").data(this.data).enter().append("text").text((t=>{if(Array.isArray(n)){let i=Array.from(this.data.map((t=>t[`${this.stat}`])));if(n.includes("first")&&t[`${this.stat}`]===i[0])return t[`${this.stat}`];if(n.includes("last")&&t[`${this.stat}`]===i[i.length-1])return t[`${this.stat}`];if(n.includes("max")&&t[`${this.stat}`]===this.localMax)return t[`${this.stat}`];if(n.includes("min")&&t[`${this.stat}`]===this.localMin)return t[`${this.stat}`]}else if(!n)return t[`${this.stat}`]})).attr("x",(t=>this.scaleLinearHorizontal(t[`${this.stat}`])+20)).attr("dx",i).attr("y",(t=>this.scaleBandVertical(t[`${this.indicator}`])+this.scaleBandVertical.bandwidth()/2)).attr("dy",s).attr("text-anchor","middle").attr("transform",`translate(${this.margin},${this.margin/2})`).attr("fill",a).style("font-family","sans-serif").style("font-weight",r).style("font-size",e),t){let i=document.querySelectorAll(`${this.selector} svg .labels text`);for(let s of i)s.textContent&&("addPercent"===t?s.textContent=s.textContent+"%":"commaSeparate"!==t&&!1!==t||(s.textContent=this.commaFormatter(s.textContent)))}return this}}}class PieChart extends Core{constructor(t,i){super(t,i)}get pie(){return d3.pie().value((t=>t[`${this.stat}`]))(this.data)}get arc(){return d3.arc().innerRadius(10).outerRadius(this.width/2).padAngle(.05).padRadius(50)}createChart({width:t=300,height:i=300,data:s,indicator:a,stat:r,color:e=["black"]}={}){s?this.data=s:s=this.data,a?this.indicator=a:a=this.indicator,r?this.stat=r:r=this.stat;for(let t=0;t<this.data.length;t++)this.legend.push({}),this.legend[t].indicator=this.data[t][`${a}`];if(this.height=i,this.width=t,this.wrapperWidth=t,t&&i)return this.flatten,this.parts.svg=this.root.append("svg").attr("viewBox",`0 0 ${this.width+2*this.margin} ${this.height+this.margin}`).append("g").attr("class","pie-chart").attr("transform",`translate(${this.width/2+this.margin},${this.height/2+this.margin})`),this}addSlices({color:t=["black"]}={}){this.parts.slices=this.parts.svg.selectAll("path").data(this.pie).enter().append("path").attr("stroke","gray").attr("stroke-width","lightgray").attr("d",this.arc).attr("fill",((i,s)=>{if(Array.isArray(t))return 1===t.length?t[0]:t[s]}));for(let i=0;i<this.legend.length;i++)t.length>1?this.legend[i].color=t[i]:1===t.length&&(this.legend[i].color=t[0]);return this}addLabels({formatPunctuation:t="commaSeparate",dx:i=0,dy:s=0,color:a="black",fontWeight:r="normal",fontSize:e=null,show:n=!1}={}){let h=this;if(this.parts.labels=d3.select(`${this.selector} svg`).append("g").attr("class","pie-chart-labels").attr("transform",`translate(${this.width/2+this.margin},${this.height/2+this.margin})`).selectAll("text").data(this.pie).enter().append("text").each((function(t){const i=h.arc.centroid(t);d3.select(this).attr("x",i[0]).attr("y",i[1])})).attr("dx",i).attr("dy",s).attr("text-anchor","middle").text((t=>{if(Array.isArray(n)){let i=Array.from(this.data.map((t=>t[`${this.stat}`])));if(n.includes("first")&&t.value===i[0])return t.value;if(n.includes("last")&&t.value===i[i.length-1])return t.value;if(n.includes("max")&&t.value===this.localMax)return t.value;if(n.includes("min")&&t.value===this.localMin)return t.value}else if(!n)return t.value})).attr("fill",a).style("font-family","sans-serif").style("font-weight",r).style("font-size",e),t){let i=document.querySelectorAll(`${this.selector} svg .pie-chart-labels text`);for(let s of i)s.textContent&&("addPercent"===t?s.textContent=s.textContent+"%":"commaSeparate"!==t&&!1!==t||(s.textContent=this.commaFormatter(s.textContent)))}return this}}class LineChart extends Core{constructor(t){super(t)}createChart({width:t=400,height:i=300,data:s,indicator:a,stat:r}={}){if(s?this.data=s:s=this.data,a?this.indicator=a:a=this.indicator,r?this.stat=r:r=this.stat,this.stat=r,this.width=t,this.wrapperWidth=t,this.height=i,t&&i)return this.flatten,this.parts.svg=this.root.append("svg"),this.parts.svg.attr("viewBox",`0 0 ${this.width+2*this.margin} ${this.height+this.margin}`).append("g"),this}addXAxis({tickSizeOuter:t=0,tickSizeInner:i=null,tickPadding:s=3,hideLine:a=!1,axisLabels:r}={}){return this.parts.xAxis=d3.select(`${this.selector} svg`).append("g").attr("class","x-axis").attr("transform",`translate(${this.margin},${this.height+this.margin})`).call(d3.axisBottom(this.scaleBandHorizontal).tickSizeOuter(t).tickSizeInner(i).tickPadding(s)),a&&this.hideLineX,Array.isArray(r)&&d3.selectAll(`${this.selector} svg .x-axis .tick text`).html(((t,i)=>r[i])),this}addYAxis({formatPunctuation:t="commaSeparate",ticks:i=10,tickSizeOuter:s=0,tickSizeInner:a=3,tickValues:r=null,tickPadding:e=10,hideLine:n=!1,axisLabels:h}={}){return this.parts.yAxis=d3.select(`${this.selector} svg`).append("g").attr("class","y-axis").attr("transform",`translate(${this.margin},${this.margin})`).call(d3.axisLeft(this.scaleLinearVertical).tickFormat((i=>"addPercent"===t?i+"%":"commaSeparate"===t||!1===t?this.commaFormatter(i):void 0)).ticks(i).tickSizeOuter(s).tickSizeInner(a).tickValues(r).tickPadding(e)),d3.selectAll(`${this.selector} svg .y-axis .tick line`).style("stroke","gainsboro"),n&&this.hideLineY,Array.isArray(h)&&d3.selectAll(`${this.selector} svg .y-axis .tick text`).html(((t,i)=>h[i])),this}addLine({color:t="black"}={}){let i={};i.color=t,i.indicator=this.indicator,this.legend.push(i),this.parts[`line_${this.stat}`]=d3.select(`${this.selector} svg`).append("g").attr("class",`line-${this.indicator}`).append("path").attr("d",this.lineFunc(this.data)).attr("transform",`translate(${this.margin},${this.margin})`).attr("stroke",t).attr("stroke-width",2).attr("fill","none"),this.transitionAttr=[],length=this.parts[`line_${this.stat}`]._groups[0][0].getTotalLength();for(let t=0;t<this.parts[`line_${this.stat}`]._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part=`line_${this.stat}`,this.transitionAttr[t].attr_1="stroke-dashoffset",this.transitionAttr[t].attr_2="stroke-dasharray",this.transitionAttr[t].startAttr_1=length,this.transitionAttr[t].endAttr_1=0,this.transitionAttr[t].startAttr_2=length,this.transitionAttr[t].endAttr_2=length}return this}addLabels({stat:t,formatPunctuation:i="commaSeparate",dx:s=0,dy:a=0,color:r="black",fontWeight:e="normal",fontSize:n=null,show:h=!1}={}){if(t?this.stat=t:t=this.stat,0!==this.width||0!==this.height){if(this.parts[`labels_${this.stat}`]=d3.select(this.selector+" svg").append("g").attr("class",`labels-${this.stat}`).selectAll("text").data(this.data).enter().append("text").text((t=>{if(Array.isArray(h)){let i=Array.from(this.data.map((t=>t[`${this.stat}`])));if(h.includes("first")&&t[`${this.stat}`]===i[0])return t[`${this.stat}`];if(h.includes("last")&&t[`${this.stat}`]===i[i.length-1])return t[`${this.stat}`];if(h.includes("max")&&t[`${this.stat}`]===this.localMax)return t[`${this.stat}`];if(h.includes("min")&&t[`${this.stat}`]===this.localMin)return t[`${this.stat}`]}else if(!h)return t[`${this.stat}`]})).attr("y",(t=>this.scaleLinearVertical(t[this.stat])+20)).attr("dy",a).attr("x",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])+this.scaleBandHorizontal.bandwidth()/2)).attr("dx",s).attr("text-anchor","middle").attr("fill",r).attr("transform",`translate(${this.margin},${this.margin/2})`).style("font-family","sans-serif").style("font-weight",e).style("font-size",n),i){let t=document.querySelectorAll(`${this.selector} svg .labels-${this.indicator} text`);for(let s of t)s.textContent&&("addPercent"===i?s.textContent=s.textContent+"%":"commaSeparate"!==i&&!1!==i||(s.textContent=this.commaFormatter(s.textContent)))}return this}}addPlotPoints({color:t="black",stat:i,r:s=5}={}){if(i?this.stat=i:i=this.stat,0!==this.width||0!==this.height)return this.parts[`points_${this.stat}`]=d3.select(`${this.selector} svg`).append("g").attr("class",`points-${this.stat}`).selectAll("circle").data(this.data).enter().append("circle").attr("cx",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])+this.scaleBandHorizontal.bandwidth()/2)).attr("cy",(t=>this.scaleLinearVertical(t[this.stat]))).attr("r",s).attr("transform",`translate(${this.margin},${this.margin})`).attr("fill",t),this}}class CombinationChart extends Core{constructor(t){super(t),this.transitionAttr=[]}get flatten(){return this.domain.pop(),this.data.forEach((t=>{this.domain.push(t[`${this.stat}`])}))}createChart({width:t=300,height:i=300,data:s,indicator:a,stat:r}={}){if(s?this.data=s:s=this.data,a?this.indicator=a:a=this.indicator,r?this.stat=r:r=this.stat,this.width=t,this.wrapperWidth=t,this.height=i,t&&i)return this.flatten,this.parts.svg=this.root.append("svg").attr("viewBox",`0 0 ${this.width+2*this.margin} ${this.height+this.margin}`),this}addBars({color:t="black",width:i,padding:s=.2,opacity:a=1,translateX:r=0,translateY:e=0,spreadX:n=1}={}){this.padding=s,i?this.width=i:i=this.width;let h={};h.color=t,h.indicator=this.stat,this.legend.push(h),this.parts[`bars_${this.stat}`]=d3.select(`${this.selector} svg`).append("g").attr("class",`bars-${this.stat}`).attr("width",this.width).selectAll("rect").data(this.data).enter().append("rect").attr("x",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])*n)).attr("width",this.scaleBandHorizontal.bandwidth()).attr("transform",`translate(${this.margin+r},${this.margin/2+e})`).style("opacity",a).attr("fill",((i,s)=>t)).attr("y",(t=>this.min>=0?this.scaleLinearVertical(t[`${this.stat}`]):t[`${this.stat}`]<0?this.scaleLinearVertical(0):this.scaleLinearVertical(t[`${this.stat}`]))).attr("height",(t=>this.min>=0?this.height-this.scaleLinearVertical(t[`${this.stat}`]):this.scaleLinearVertical(0)-this.scaleLinearVertical(Math.abs(t[`${this.stat}`])))),d3.select(`${this.selector} svg g`),this.min<0&&d3.select(`${this.selector} svg`).append("g").attr("class","dividing-line").append("line").attr("x1",this.margin).attr("x2",this.margin+this.wrapperWidth).attr("y1",this.scaleLinearVertical(0)+this.margin/2).attr("y2",this.scaleLinearVertical(0)+this.margin/2).style("stroke","lightgray").style("stroke-width","1px"),this.transitionAttr=[];for(let t=0;t<this.parts[`bars_${this.stat}`]._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part=`bars_${this.stat}`,this.transitionAttr[t].attr_1="height",this.transitionAttr[t].startAttr_1=0,this.transitionAttr[t].endAttr_1=parseFloat(this.parts[`bars_${this.stat}`]._groups[0][t].getAttribute("height")),this.transitionAttr[t].attr_2="y",this.transitionAttr[t].startAttr_2=this.scaleLinearVertical(0),this.transitionAttr[t].endAttr_2=parseFloat(this.parts[`bars_${this.stat}`]._groups[0][t].getAttribute("y"))}return this}addLine({color:t="black",width:i,translateX:s=0,translateY:a=0}={}){i?this.width=i:i=this.width;let r={};r.color=t,r.indicator=this.stat,this.legend.push(r),this.parts[`line_${this.stat}`]=d3.select(`${this.selector} svg`).append("g").attr("class",`line-${this.stat}`).attr("width",this.width).append("path").attr("d",this.lineFunc(this.data)).attr("transform",`translate(${this.margin},${this.margin})`).attr("stroke",((i,s)=>{if("string"==typeof t)return t})).attr("stroke-width",2).attr("fill","none").attr("transform",`translate(${this.margin+s},${this.margin/2+a})`),this.transitionAttr=[],length=this.parts[`line_${this.stat}`]._groups[0][0].getTotalLength();for(let t=0;t<this.parts[`line_${this.stat}`]._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part=`line_${this.stat}`,this.transitionAttr[t].attr_1="stroke-dashoffset",this.transitionAttr[t].attr_2="stroke-dasharray",this.transitionAttr[t].startAttr_1=length,this.transitionAttr[t].endAttr_1=0,this.transitionAttr[t].startAttr_2=length,this.transitionAttr[t].endAttr_2=length}return this}addPlotPoints({color:t="black",width:i,padding:s=0,opacity:a=1,translateX:r=0,translateY:e=0,spreadX:n=1,r:h=20,stroke:l=null,strokeWidth:d=0}={}){if(this.padding=s,i?this.width=i:i=this.width,t){let i={};i.color=t,i.indicator=this.stat,this.legend.push(i)}this.parts[`points_${this.stat}`]=this.parts.svg.append("g").attr("class",`points-${this.stat}`).attr("width",this.width).selectAll("circle").data(this.data).enter().append("circle").attr("cx",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])*n+this.scaleBandHorizontal.bandwidth()/2)).attr("r",h).attr("transform",`translate(${this.margin+r},${this.margin/2+e})`).style("opacity",a).attr("fill",((i,s)=>{if("string"==typeof t)return t})).attr("stroke",l).attr("strokeWidth",d).attr("cy",(t=>this.scaleLinearVertical(t[`${this.stat}`]))),this.min<0&&this.parts.svg.append("g").attr("class","dividing-line").append("line").attr("x1",this.margin).attr("x2",this.margin+this.wrapperWidth).attr("y1",this.scaleLinearVertical(0)+this.margin/2).attr("y2",this.scaleLinearVertical(0)+this.margin/2).style("stroke","lightgray").style("stroke-width","1px"),this.transitionAttr=[];for(let t=0;t<this.parts[`points_${this.stat}`]._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part=`points_${this.stat}`,this.transitionAttr[t].attr_1="cy",this.transitionAttr[t].startAttr_1=this.scaleLinearVertical(0),this.transitionAttr[t].endAttr_1=this.parts[`points_${this.stat}`]._groups[0][t].getAttribute("cy")}return this}addGuides({width:t,padding:i=.2,translateX:s=0,translateY:a=0,spreadX:r=1,stroke:e="gray",strokeWidth:n=1}={}){this.padding=i,t?this.width=t:t=this.width,this.parts[`guides_${this.stat}`]=d3.select(`${this.selector} svg`).append("g").attr("class",`guides-${this.stat}`).selectAll("line").data(this.data).enter().append("line").attr("x1",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])*r+this.scaleBandHorizontal.bandwidth()/2)).attr("x2",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])*r+this.scaleBandHorizontal.bandwidth()/2)).attr("stroke-width",n).attr("stroke",e).attr("stroke-dasharray",3).attr("transform",`translate(${this.margin+s},${this.margin/2+a})`).attr("y1",(t=>this.scaleLinearVertical(t[`${this.stat}`]))).attr("y2",(()=>this.min>=0?this.height:this.scaleLinearVertical(0))),this.transitionAttr=[];for(let t=0;t<this.parts[`guides_${this.stat}`]._groups[0].length;t++){let i=new Object;this.transitionAttr.push(i),this.transitionAttr[t].part=`guides_${this.stat}`,this.transitionAttr[t].attr_2="y1",this.transitionAttr[t].startAttr_2=this.scaleLinearVertical(0),this.transitionAttr[t].endAttr_2=this.parts[`guides_${this.stat}`]._groups[0][t].getAttribute("y1")}return this}addXAxis({tickSizeOuter:t=0,tickSizeInner:i=null,tickPadding:s=3,hideLine:a=!1,axisLabels:r}={}){if(0!==this.width||0!==this.height)return this.xAxisIterator++,this.parts[`xAxis_${this.indicator}`]=d3.select(this.selector+"  svg").append("g").attr("class",`x-axis-${this.indicator}`).attr("transform",`translate(${this.margin},${this.height+this.margin/2})`).call(d3.axisBottom(this.scaleBandHorizontal).tickSizeOuter(t).tickSizeInner(i).tickPadding(s)),a&&this.hideLineX,Array.isArray(r)&&d3.selectAll(`${this.selector} svg .x-axis .tick text`).html(((t,i)=>r[i])),this}addYAxis({formatPunctuation:t="commaSeparate",ticks:i=10,tickSizeOuter:s=0,tickSizeInner:a=null,tickValues:r=null,tickPadding:e=3,hideLine:n=!1,axisLabel:h,orient:l="left"}={}){if(0!==this.width||0!==this.height)return this.domain=[],this.flatten,"left"===l?this.parts[`yAxis_${this.stat}`]=this.parts.svg.append("g").attr("class",`y-axis-${this.stat}`).attr("transform",`translate(${this.margin},${this.margin/2})`).call(d3.axisLeft(this.scaleLinearVertical).tickFormat((i=>"addPercent"===t?i+"%":"commaSeparate"===t||!1===t?this.commaFormatter(i):void 0)).ticks(i).tickSizeOuter(s).tickSizeInner(a).tickValues(r).tickPadding(e)):"right"===l&&(this.parts[`yAxis_${this.stat}`]=this.parts.svg.append("g").attr("class",`y-axis-${this.stat}`).attr("transform",`translate(${this.margin+this.wrapperWidth},${this.margin/2})`).call(d3.axisRight(this.scaleLinearVertical).tickFormat((i=>"addPercent"===t?i+"%":"commaSeparate"===t||!1===t?this.commaFormatter(i):void 0)).ticks(i).tickSizeOuter(s).tickSizeInner(a).tickValues(r).tickPadding(e))),d3.selectAll(`${this.selector} svg .y-axis .tick line`).style("stroke","gainsboro"),n&&this.hideLineY,Array.isArray(h)&&d3.selectAll(`${this.selector} svg .y-axis .tick text`).html(((t,i)=>h[i])),this}addLabels({stat:t,indicator:i,formatPunctuation:s="commaSeparate",dx:a=0,dy:r=0,color:e="black",fontWeight:n="normal",fontSize:h=null,show:l=!1}={}){if(0!==this.width||0!==this.height){if(t?this.stat=t:t=this.stat,i?this.indicator=i:i=this.indicator,this.parts[`labels_${this.stat}`]=this.parts.svg.append("g").attr("class",`labels-${this.indicator}`).selectAll("text").data(this.data).enter().append("text").text((t=>{if(Array.isArray(l)){let i=Array.from(this.data.map((t=>t[`${this.stat}`])));if(l.includes("first")&&t[`${this.stat}`]===i[0])return t[`${this.stat}`];if(l.includes("last")&&t[`${this.stat}`]===i[i.length-1])return t[`${this.stat}`];if(l.includes("max")&&t[`${this.stat}`]===this.localMax)return t[`${this.stat}`];if(l.includes("min")&&t[`${this.stat}`]===this.localMin)return t[`${this.stat}`]}else if(!l)return t[`${this.stat}`]})).attr("y",(t=>this.scaleLinearVertical(t[`${this.stat}`])+20)).attr("dy",r).attr("x",(t=>this.scaleBandHorizontal(t[`${this.indicator}`])+this.scaleBandHorizontal.bandwidth()/2)).attr("dx",a).attr("text-anchor","middle").attr("transform",`translate(${this.margin},0)`).attr("fill",e).style("font-family","sans-serif").style("font-weight",n).style("font-size",h),s){let t=document.querySelectorAll(`${this.selector} svg .labels-${this.indicator} text`);for(let i of t)i.textContent&&("addPercent"===s?i.textContent=i.textContent+"%":"commaSeparate"!==s&&!1!==s||(i.textContent=this.commaFormatter(i.textContent)))}return this}}}module.exports.Core=Core,module.exports.VerticalBarChart=VerticalBarChart,module.exports.HorizontalBarChart=HorizontalBarChart,module.exports.PieChart=PieChart,module.exports.LineChart=LineChart,module.exports.CombinationChart=CombinationChart;